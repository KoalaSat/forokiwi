{"version":3,"file":"static/js/425.2c372c40.chunk.js","mappings":"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","sources":["app/pages/Forum/index.tsx"],"sourcesContent":["import { Avatar, Breadcrumb, Button, Col, Empty, Row, Skeleton, Table, TableColumnsType, Typography, theme } from \"antd\";\nimport SmsIcon from '@mui/icons-material/Sms';\nimport MailIcon from '@mui/icons-material/Mail';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport NoteAddIcon from '@mui/icons-material/NoteAdd';\nimport PeopleAltIcon from '@mui/icons-material/PeopleAlt';\nimport WhatshotIcon from '@mui/icons-material/Whatshot';\nimport AdminPanelSettingsIcon from '@mui/icons-material/AdminPanelSettings';\nimport Layout, { Content } from \"antd/es/layout/layout\"\nimport { useTranslation } from \"react-i18next\";\nimport { format, formatDistanceToNow, fromUnixTime } from \"date-fns\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useContext, useEffect, useMemo, useState } from \"react\";\nimport { UseNostrStoreType, NostrContext } from \"app/contexts/NostrContext\";\nimport { NDKEvent, NDKFilter, NDKUser, filterForEventsTaggingId, profileFromEvent } from \"@nostr-dev-kit/ndk\";\nimport { ActiveUser } from \"app/components/ActiveUser\";\nimport { ForumsButtons } from \"app/components/ForumsButtons\";\nimport { AppContext, UseAppStoreType } from \"app/contexts/AppContext\";\n\nconst { Text, Title, Link } = Typography;\n\nexport const Forum: () => JSX.Element = () => {\n  const { turtleMode } = useContext<UseAppStoreType>(AppContext);\n  const { ndk, authors, saveAuthors, comments, saveComments, reactions, saveReactions, saveTopics, saveForums, forums } = useContext<UseNostrStoreType>(NostrContext);\n  const {\n    token: { colorBgContainer, borderRadiusLG },\n  } = theme.useToken();\n  const { naddr } = useParams();\n  const { t } = useTranslation()\n  const navigate = useNavigate();\n\n  const [forumEvent, setForumEvent] = useState<NDKEvent>()\n  const [title, setTitle] = useState<string>()\n  const [description, setDescription] = useState<string>()\n  const [topicEvents, setTopicEvents] = useState<Set<NDKEvent>>()\n\n  const [hotRopics, setHotTopics] = useState<Set<NDKEvent>>()\n  const [acceptedTopics, setAcceptedTopics] = useState<string[]>()\n  const [isModerated, setIsModerated] = useState<boolean>(true)\n\n  const [loadingPage, setLoadingPage] = useState<boolean>(true)\n  const [loadingAuthors, setLoadingAuthors] = useState<boolean>(true)\n  const [loadingComments, setLoadingComments] = useState<boolean>(true)\n  const [loadingReactions, setLoadingReactions] = useState<boolean>(true)\n  const [loadingHotTopics, setLoadingHotTopics] = useState<boolean>(true)\n  const [loadingModerators, setLoadingModerators] = useState<boolean>(true)\n  const [page, setPage] = useState<number>(1)\n  const pageSize = 10\n\n  const skeletonList = useMemo(() => new Array(10).fill(new NDKEvent()), [])\n\n  const columns: TableColumnsType<NDKEvent> = [\n    {\n      dataIndex: 'content',\n      render: (_text, record, i) => {\n        const date = fromUnixTime(parseInt(record.tagValue(\"published_at\") ?? record.created_at?.toString() ?? \"0\", 10));\n        const relativeTime = formatDistanceToNow(date, { addSuffix: true });\n        const profile = authors?.[record.pubkey]\n        const loadingModerations = isModerated && !acceptedTopics\n        return (\n          <Col span={24}>\n            <Row>\n              <Col xs={0} md={3} style={{ maxWidth: 40 }}>\n                <Row align=\"middle\">\n                  <MailIcon />\n                </Row>\n              </Col>\n              <Col xs={24} md={21}>\n                <Row>\n                  <Col span={24}>\n                    <Skeleton loading={(!record.tagValue(\"title\") && !record.tagValue(\"d\")) || loadingModerations} active paragraph={{ rows: 1, style: { margin: 0 } }} title={false} >\n                      <Text strong>{record.tagValue(\"title\") ?? record.tagValue(\"d\") ?? '-'}</Text>\n                    </Skeleton>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col span={24}>\n                    <Skeleton loading={loadingAuthors || loadingModerations} active paragraph={{ rows: 1, style: { margin: 0, marginTop: 8 } }} title={false} >\n                      <Col xs={0} md={24}>\n                        <Text type=\"secondary\">\n                          {`@${profile?.displayName ?? profile?.name ?? t(\"shared.events.anonymous\")} - ${t(\"shared.events.published_at\", { date: relativeTime })}`}\n                        </Text>\n                      </Col>\n                      <Col xs={24} md={0}>\n                        <Text type=\"secondary\">\n                          {`@${profile?.displayName ?? profile?.name ?? t(\"shared.events.anonymous\")} - ${format(date, 'yy/MM/dd')}`}\n                        </Text>\n                      </Col>\n                    </Skeleton>\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n          </Col>\n\n        )\n      }\n    },\n    {\n      dataIndex: 'likes',\n      width: 15,\n      render: (text, record, index) => {\n        if (turtleMode) return <></>\n        const loadingModerations = isModerated && !acceptedTopics\n        return (\n          <Row>\n            <Col span={24}>\n              <Row justify=\"center\">\n                <FavoriteIcon />\n              </Row>\n              <Row justify=\"center\">\n                <Skeleton loading={(!reactions[record?.dTag ?? ''] && loadingReactions) || loadingModerations} active paragraph={{ rows: 1, style: { margin: 0, marginTop: 6 }, width: 25 }} title={false} >\n                  {reactions[record?.dTag ?? '']?.length ?? 0}\n                </Skeleton>\n              </Row>\n            </Col>\n          </Row>\n        )\n      },\n    },\n    {\n      dataIndex: 'count',\n      width: 15,\n      render: (text, record, index) => {\n        if (turtleMode) return <></>\n        const loadingModerations = isModerated && !acceptedTopics\n        return (\n          <Row justify=\"space-between\">\n            <Col span={24}>\n              <Row justify=\"center\">\n                <SmsIcon />\n              </Row>\n              <Row justify=\"center\">\n                <Skeleton loading={(!comments[record?.dTag ?? ''] && loadingComments) || loadingModerations} active paragraph={{ rows: 1, style: { margin: 0, marginTop: 6 }, width: 25 }} title={false} >\n                  {comments[record?.dTag ?? '']?.length ?? 0}\n                </Skeleton>\n              </Row>\n            </Col>\n          </Row>\n        )\n      },\n    },\n  ]\n\n  useEffect(() => {\n    if (naddr && naddr !== 'all') {\n      if (forums[naddr]) setForumEvent(forums[naddr])\n      ndk.fetchEvent(naddr, { closeOnEose: true }).then((event) => {\n        if (event?.dTag) {\n          setForumEvent(event)\n          saveForums({ [naddr]: event, [event.dTag]: event })\n        }\n      })\n    }\n\n\n    return () => {\n      setForumEvent(undefined)\n    }\n  }, [])\n\n  useEffect(() => {\n    getTopicEvents()\n  }, [page])\n\n  useEffect(() => {\n    if (forumEvent) {\n      setTitle(forumEvent?.tagValue(\"name\") ?? forumEvent.tagValue(\"d\"))\n      setDescription(forumEvent?.tagValue(\"description\") ?? \"\")\n      getLatestComments()\n      getModerators()\n    } else if (naddr === 'all') {\n      setTitle(t(\"pages.forums.list.all.name\"))\n      setDescription(t(\"pages.forums.list.all.description\"))\n      setIsModerated(false)\n    }\n  }, [forumEvent])\n\n  const getLatestComments = (): void => {\n    if (turtleMode) return\n\n    setLoadingHotTopics(true)\n    if (forumEvent) {\n      ndk.fetchEvents({ kinds: [1], '#a': [forumEvent.tagReference()[1]], limit: 10 }, { closeOnEose: true }).then((newEvents) => {\n        const hotRopicsTags = [...newEvents].map(e => e.tags.find(t => t[0] === 'a' && t[1].startsWith('30023:')))\n        const hotTopicD: string[] = hotRopicsTags.map(t => t?.[1].split(':')?.[2] ?? '')\n        const uniqueDTags = Array.from(new Set(hotTopicD))\n        ndk.fetchEvents({ kinds: [30023], '#d': uniqueDTags }).then((newEvents) => {\n          setHotTopics(newEvents)\n          setLoadingHotTopics(false)\n          saveTopics([...newEvents].reduce((accumulator, event) => {\n            if (event.dTag) accumulator[event.encode()] = event\n            return accumulator;\n          }, {}))\n        })\n      })\n    } else {\n      setLoadingHotTopics(false)\n    }\n  }\n\n  const getTopicEvents = (): void => {\n    setLoadingPage(true)\n    setLoadingAuthors(true)\n    setLoadingComments(true)\n    setLoadingReactions(true)\n    if (page * pageSize > (topicEvents?.size ?? 0)) {\n      let filters: NDKFilter = { kinds: [30023], limit: pageSize }\n\n      if (topicEvents) {\n        const array = Array.from(topicEvents);\n        const until = array[array.length - 1]?.created_at ?? 0\n        filters.until = until + 1\n      }\n\n      if (naddr) filters = { ...filters, ...filterForEventsTaggingId(naddr) }\n\n      ndk.fetchEvents(filters, { closeOnEose: true }).then((newEvents) => {\n        setTopicEvents(events => new Set<NDKEvent>([...events ?? [], ...newEvents]))\n        saveTopics([...newEvents].reduce((accumulator, event) => {\n          if (event.dTag) accumulator[event.encode()] = event\n          return accumulator;\n        }, {}))\n        getTopicEventsMeta(newEvents)\n        setLoadingPage(false)\n      })\n        .catch(() => {\n          setLoadingPage(false)\n          setTopicEvents(new Set())\n        })\n    } else {\n      setLoadingPage(false)\n      setLoadingAuthors(false)\n      setLoadingComments(false)\n      setLoadingReactions(false)\n    }\n  }\n\n  const getModerators = (): void => {\n    if (forumEvent) {\n      setLoadingModerators(true)\n      const pets = forumEvent.getMatchingTags('p')\n      if (pets.length > 0) {\n        setIsModerated(true)\n        const authors = pets.map(p => p[1])\n        if (!turtleMode) {\n          ndk\n            .fetchEvents({ kinds: [0], authors }, { closeOnEose: true, groupable: true })\n            .then((eventsList) => {\n              const authors = {}\n              eventsList.forEach((event) => {\n                authors[event.pubkey] = profileFromEvent(event)\n              })\n              saveAuthors(authors)\n              setLoadingModerators(false)\n            })\n        } else {\n          setLoadingModerators(false)\n        }\n        ndk\n          // @ts-expect-error\n          .fetchEvents({ kinds: [4550], authors }, { closeOnEose: true })\n          .then((eventsList) => {\n            const eventIds: string[] = []\n            if (eventsList) {\n              [...eventsList].forEach(e => {\n                // @ts-expect-error\n                const aTag: string[] = e.getMatchingTags('a')\n                if (aTag[1]) eventIds.push(aTag[1])\n              })\n            }\n            setAcceptedTopics(eventIds)\n          })\n          .catch(() => setAcceptedTopics([]))\n      } else {\n        setIsModerated(false)\n      }\n    }\n  }\n\n  const getTopicEventsMeta = (events: Set<NDKEvent>): void => {\n    const authors: string[] = []\n    if (authors.length > 0) {\n      ndk\n        .fetchEvents({ kinds: [0], authors }, { closeOnEose: true, groupable: true })\n        .then((eventsList) => {\n          const authors = {}\n          eventsList.forEach((event) => {\n            authors[event.pubkey] = profileFromEvent(event)\n          })\n          saveAuthors(authors)\n          setLoadingAuthors(false)\n        })\n    } else {\n      setLoadingAuthors(false)\n    }\n    if (!turtleMode) {\n      events.forEach(event => {\n        const dTag = event.dTag?.toString()\n        if (dTag) {\n          ndk\n            .fetchEvents({ kinds: [1, 7], \"#a\": [`30023:${event.pubkey}:${dTag}`] }, { groupable: true })\n            .then((events) => {\n              const commList: NDKEvent[] = []\n              const reactList: NDKEvent[] = []\n              events.forEach(event => {\n                switch (event.kind) {\n                  case 1:\n                    commList.push(event)\n                    break;\n                  case 7:\n                    reactList.push(event)\n                    break;\n                  default:\n                    break;\n                }\n              })\n              saveComments({ [dTag]: commList })\n              saveReactions({ [dTag]: reactList })\n              setLoadingReactions(false)\n              setLoadingComments(false)\n            })\n        }\n      })\n    }\n  }\n\n  return (\n    <Content>\n      <Row justify='space-between' gutter={[0, 10]}>\n        <Col xs={24} md={16}>\n          <Row gutter={[0, 10]} >\n            <Col span={24}>\n              <Row>\n                <Breadcrumb\n                  items={[\n                    {\n                      title: <a>Home</a>,\n                      onClick: () => navigate('/')\n                    },\n                    {\n                      title: title ?? <Skeleton paragraph={{ rows: 1, style: { marginTop: 0 } }} title={false} />,\n                    },\n                  ]}\n                />\n              </Row>\n            </Col>\n            <Col span='24'>\n              <Layout\n                style={{ background: colorBgContainer, borderTopLeftRadius: borderRadiusLG, borderTopRightRadius: borderRadiusLG, paddingBottom: 15 }}\n              >\n                <Row justify='space-between' align=\"middle\">\n                  <Col span='1' />\n                  <Col span='16'>\n                    <Skeleton active loading={!title && !description} paragraph={{ rows: 1 }} style={{ marginTop: 26 }} >\n                      <Row>\n                        <Title>{title}</Title>\n                      </Row>\n                      <Row>\n                        <Text type=\"secondary\">{description}</Text>\n                      </Row>\n                    </Skeleton>\n                  </Col>\n                  <Col xs={0} md={4}>\n                    <Row justify=\"end\">\n                      <Button type=\"primary\" htmlType=\"submit\" size=\"large\" icon={<NoteAddIcon />} iconPosition=\"end\" onClick={() => navigate(`/forum/${naddr}/new`)}>\n\n                        <Col xs={0} md={20}>\n                          {t('pages.forum.createTopic')}\n                        </Col>\n                      </Button>\n                    </Row>\n                  </Col>\n                  <Col span='1' />\n                </Row>\n              </Layout>\n            </Col>\n            <Col span='24'>\n              <Layout\n                style={{ background: colorBgContainer, borderRadius: borderRadiusLG }}\n              >\n                <Table\n                  pagination={false}\n                  columns={columns}\n                  dataSource={loadingPage || (isModerated && !acceptedTopics)\n                    ? skeletonList\n                    : [...topicEvents ?? []]\n                      .filter(e => !isModerated || acceptedTopics?.includes(e.dTag ?? ''))\n                      .slice(((page - 1) * pageSize), page * pageSize)}\n                  onRow={(record, _rowIndex) => {\n                    return {\n                      onClick: () => navigate(`/topic/${record.encode()}`)\n                    };\n                  }}\n                />\n              </Layout>\n            </Col>\n            <Col span='24'>\n              <Row justify=\"space-between\">\n                <Button type=\"link\" disabled={page < 2} onClick={() => setPage(p => p - 1)}>{t(\"shared.previous\")}</Button>\n                <Button type=\"link\">{page}</Button>\n                <Button type=\"link\" disabled={(topicEvents?.size ?? Infinity) < page * pageSize} onClick={() => setPage(p => p + 1)}>{t(\"shared.next\")}</Button>\n              </Row>\n            </Col>\n          </Row>\n        </Col>\n        <Col xs={24} md={7}>\n          <Row gutter={[0, 10]} style={{ marginTop: 32 }} >\n            <Col xs={0} md={24}>\n              <ActiveUser />\n            </Col>\n            <Col  xs={0} md={24}>\n              <ForumsButtons />\n            </Col>\n            <Col span={24}>\n              {!turtleMode && naddr !== 'all' && (\n                <Layout\n                  style={{ padding: '24px 0', background: colorBgContainer, borderRadius: borderRadiusLG }}\n                >\n                  <Row justify=\"space-around\">\n                    <Col span='16'>\n                      <Title level={2}>\n                        <WhatshotIcon />\n                        {t('pages.forum.hotRopics')}\n                      </Title>\n                    </Col>\n                  </Row>\n                  <Row justify=\"space-around\">\n                    <Col span='16'>\n                      <Skeleton active loading={loadingHotTopics} title={false} paragraph={{ rows: 5 }}>\n                        {[...(hotRopics ?? [])].map((topic, i) => {\n                          if (!topic.tagValue(\"title\")) return <></>\n                          return (\n                            <Row key={i} justify='space-between' onClick={() => navigate(`/topic/${topic.encode()}`)}>\n                              <Col style={{ overflow: 'hidden', whiteSpace: 'nowrap', textOverflow: 'ellipsis' }}>\n                                <Link strong>\n                                  {topic.tagValue(\"title\") ?? topic.tagValue(\"d\") ?? '-'}\n                                </Link>\n                              </Col>\n                              <Col>\n                                <Text>{formatDistanceToNow(fromUnixTime(parseInt(topic?.tagValue(\"published_at\") ?? topic?.created_at?.toString() ?? \"0\", 10)), { addSuffix: true })}</Text>\n                              </Col>\n                            </Row>\n                          )\n                        })}\n                        {hotRopics?.size === 0 ? <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} /> : <></>}\n                      </Skeleton>\n                    </Col>\n                  </Row>\n                </Layout>\n              )}\n            </Col>\n            <Col span={24}>\n              {!turtleMode && naddr !== 'all' && (\n                <Layout\n                  style={{ padding: '24px 0', background: colorBgContainer, borderRadius: borderRadiusLG }}\n                >\n                  <Row justify=\"space-around\">\n                    <Col span='16'>\n                      <Title level={2}>\n                        <AdminPanelSettingsIcon />\n                        {t('pages.forum.moderators')}\n                      </Title>\n                    </Col>\n                  </Row>\n                  <Row justify=\"space-around\">\n                    <Col span='16'>\n                      <Skeleton active loading={!forumEvent && loadingModerators} title={false} paragraph={{ rows: 3 }}>\n                        {[...(forumEvent?.getMatchingTags('p') ?? [])].map((tag, i) => {\n                          if (!tag[1]) return <></>\n\n                          const profile = authors[tag[1]]\n                          const author = new NDKUser({ hexpubkey: tag[1] })\n                          return (\n                            <Row key={i} justify='space-between'>\n                              <Col style={{ overflow: 'hidden', whiteSpace: 'nowrap', textOverflow: 'ellipsis' }}>\n                                <Avatar src={profile?.image} icon={<PeopleAltIcon style={{ fontSize: '20px' }} />} />\n                                <Link strong href={`https://njump.me/${author.npub}`} target=\"_blank\" style={{ marginLeft: 5 }}>\n                                  {profile?.name ?? tag[1] ?? '-'}\n                                </Link>\n                              </Col>\n                            </Row>\n                          )\n                        })}\n                        {!isModerated ?\n                          <Text strong style={{ marginLeft: 5 }}>\n                            {t('pages.forum.noModerators')}\n                          </Text>\n                          : <></>}\n                      </Skeleton>\n                    </Col>\n                  </Row>\n                </Layout>\n              )}\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Content>\n  )\n}\n"],"names":["Text","Title","Link","Typography","Forum","_topicEvents$size2","_forumEvent$getMatchi","turtleMode","useContext","AppContext","ndk","authors","saveAuthors","comments","saveComments","reactions","saveReactions","saveTopics","saveForums","forums","NostrContext","token","colorBgContainer","borderRadiusLG","theme","useToken","naddr","useParams","t","useTranslation","navigate","useNavigate","forumEvent","setForumEvent","useState","title","setTitle","description","setDescription","topicEvents","setTopicEvents","hotRopics","setHotTopics","acceptedTopics","setAcceptedTopics","isModerated","setIsModerated","loadingPage","setLoadingPage","loadingAuthors","setLoadingAuthors","loadingComments","setLoadingComments","loadingReactions","setLoadingReactions","loadingHotTopics","setLoadingHotTopics","loadingModerators","setLoadingModerators","page","setPage","skeletonList","useMemo","Array","fill","NDKEvent","columns","dataIndex","render","_text","record","i","_ref","_record$tagValue","_record$created_at","_ref2","_record$tagValue2","_ref3","_profile$displayName","_ref4","_profile$displayName2","date","fromUnixTime","parseInt","tagValue","created_at","toString","relativeTime","formatDistanceToNow","addSuffix","profile","pubkey","loadingModerations","_jsx","Col","span","children","_jsxs","Row","xs","md","style","maxWidth","align","MailIcon","Skeleton","loading","active","paragraph","rows","margin","strong","marginTop","type","displayName","name","format","width","text","index","_record$dTag","_reactions$length","_reactions","_record$dTag2","_Fragment","justify","FavoriteIcon","dTag","length","_record$dTag3","_comments$length","_comments","_record$dTag4","SmsIcon","useEffect","fetchEvent","closeOnEose","then","event","undefined","getTopicEvents","_forumEvent$tagValue","_forumEvent$tagValue2","getLatestComments","getModerators","fetchEvents","kinds","tagReference","limit","newEvents","hotRopicsTags","map","e","tags","find","startsWith","hotTopicD","_t$1$split$","_t$1$split","split","uniqueDTags","from","Set","reduce","accumulator","encode","_topicEvents$size","size","filters","_array$created_at","_array","array","until","filterForEventsTaggingId","events","getTopicEventsMeta","catch","pets","getMatchingTags","p","groupable","eventsList","forEach","profileFromEvent","eventIds","aTag","push","_event$dTag","commList","reactList","kind","Content","gutter","Breadcrumb","items","onClick","Layout","background","borderTopLeftRadius","borderTopRightRadius","paddingBottom","Button","htmlType","icon","NoteAddIcon","iconPosition","borderRadius","Table","pagination","dataSource","filter","_e$dTag","includes","slice","onRow","_rowIndex","disabled","Infinity","ActiveUser","ForumsButtons","padding","level","WhatshotIcon","topic","_ref5","_topic$tagValue","_ref6","_topic$tagValue2","_topic$created_at","overflow","whiteSpace","textOverflow","Empty","image","PRESENTED_IMAGE_SIMPLE","AdminPanelSettingsIcon","tag","_ref7","_profile$name","author","NDKUser","hexpubkey","Avatar","src","PeopleAltIcon","fontSize","href","npub","target","marginLeft"],"sourceRoot":""}