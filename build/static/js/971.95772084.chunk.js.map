{"version":3,"file":"static/js/971.95772084.chunk.js","mappings":"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","sources":["../node_modules/date-fns/getUnixTime.mjs","app/pages/NewTopic/index.tsx","../node_modules/@mui/icons-material/NoteAdd.js","../node_modules/date-fns/toDate.mjs"],"sourcesContent":["import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getUnixTime\n * @category Timestamp Helpers\n * @summary Get the seconds timestamp of the given date.\n *\n * @description\n * Get the seconds timestamp of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The timestamp\n *\n * @example\n * // Get the timestamp of 29 February 2012 11:45:05 CET:\n * const result = getUnixTime(new Date(2012, 1, 29, 11, 45, 5))\n * //=> 1330512305\n */\nexport function getUnixTime(date) {\n  return Math.trunc(+toDate(date) / 1000);\n}\n\n// Fallback for modularized imports:\nexport default getUnixTime;\n","import { Breadcrumb, Button, Col, Input, Row, Select, Skeleton, Typography, theme } from \"antd\";\nimport Layout, { Content } from \"antd/es/layout/layout\"\nimport { useTranslation } from \"react-i18next\";\nimport NoteAddIcon from '@mui/icons-material/NoteAdd';\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport TextArea from \"antd/es/input/TextArea\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { UseNostrStoreType, NostrContext } from \"app/contexts/NostrContext\";\nimport { NDKEvent, NDKRelaySet, filterForEventsTaggingId } from \"@nostr-dev-kit/ndk\";\nimport { getUnixTime } from \"date-fns\";\nimport { ActiveUser } from \"app/components/ActiveUser\";\nimport { nip19 } from \"nostr-tools\";\nimport { AppContext, UseAppStoreType } from \"app/contexts/AppContext\";\nimport ReactCountryFlag from \"react-country-flag\";\nimport { languages } from \"../../../constants\";\n\nconst { Title } = Typography;\n\nexport const NewTopic: () => JSX.Element = () => {\n  const { language, setLanguage } = useContext<UseAppStoreType>(AppContext);\n  const { ndk, saveTopics, forums, saveForums, getBaseRelays } = useContext<UseNostrStoreType>(NostrContext);\n  const { t } = useTranslation()\n  const { naddr } = useParams();\n  const navigate = useNavigate();\n  const {\n    token: { colorBgContainer, borderRadiusLG },\n  } = theme.useToken();\n  const [content, setContent] = useState<string>()\n  const [forumTitle, setForumTitle] = useState<string>()\n  const [title, setTitle] = useState<string>()\n  const [forumEvent, setForumEvent] = useState<NDKEvent>()\n\n  useEffect(() => {\n    if (naddr && naddr !== 'all') {\n      if (forums[naddr]) setForumEvent(forums[naddr])\n      ndk.fetchEvent(naddr, { closeOnEose: true }).then((event) => {\n        if (event?.dTag) {\n          setForumEvent(event)\n          saveForums({ [naddr]: event, [event.dTag]: event })\n        }\n      })\n    }\n\n    return () => {\n      setForumEvent(undefined)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (forumEvent) {\n      setForumTitle(forumEvent?.tagValue(\"name\") ?? forumEvent.tagValue(\"d\"))\n    } else if (naddr === 'all') {\n      setForumTitle(t(\"pages.forums.list.all.name\"))\n    }\n  }, [forumEvent])\n\n  const getForumRelaySet = (): NDKRelaySet => {\n    let relays: string[] = getBaseRelays()\n\n    if (forumEvent) {\n      forumEvent.onRelays.forEach(r => relays.push(r.url))\n    }\n    if (naddr) {\n      const ref = nip19.decode(naddr)\n      // @ts-expect-error\n      relays = [...relays, ...ref.data?.relays ?? []]\n    }\n\n    return NDKRelaySet.fromRelayUrls(relays, ndk, true)\n  }\n\n  const createTopic = async (): Promise<void> => {\n    if (naddr && content && title) {\n      const topicEvent = new NDKEvent(ndk)\n      topicEvent.kind = 30023\n      topicEvent.content = content\n\n      await topicEvent.generateTags()\n\n      if (naddr !== 'all') {\n        const forumTag = filterForEventsTaggingId(naddr)?.['#a']\n        if (forumTag) topicEvent.tags.push(['a', forumTag[0]])\n      }\n\n      topicEvent.tags.push(['title', title])\n      topicEvent.tags.push(['published_at', getUnixTime(new Date()).toString()])\n      topicEvent.tags.push(['L', \"ISO-639-1\"])\n      topicEvent.tags.push(['l', language.value.split(\"-\")[0], \"ISO-639-1\"])\n\n      topicEvent\n        .publish(getForumRelaySet())\n        .then((result) => {\n          if (result && topicEvent.dTag) {\n            const newNaddr = topicEvent.encode()\n            saveTopics({ [topicEvent.dTag]: topicEvent })\n            navigate(`/topic/${newNaddr}`)\n          }\n        })\n    }\n  }\n\n  const changeLanguage = (langCode: string): void => {\n    const selected = languages.find((lang) => langCode === lang.value)\n    if (selected) {\n      setLanguage(selected)\n    }\n  }\n\n  return (\n    <Content>\n      <Row justify='space-between'>\n        <Col xs={24} md='16'>\n          <Row gutter={[0, 10]} >\n            <Col span={24}>\n              <Row>\n                <Breadcrumb\n                  items={[\n                    {\n                      title: <a>Home</a>,\n                      onClick: () => navigate('/')\n                    },\n                    {\n                      title: forumTitle ? <a>{forumTitle}</a> : <Skeleton paragraph={{ rows: 1, width: 55, style: { marginTop: 0 } }} title={false} />,\n                      onClick: () => navigate(`/forum/${forumEvent?.kind ? forumEvent.encode() : 'all'}`)\n                    },\n                    {\n                      title: t('pages.newTopic.createTopic'),\n                    },\n                  ]}\n                />\n              </Row>\n            </Col>\n            <Col span='24'>\n              <Layout\n                style={{ background: colorBgContainer, borderRadius: borderRadiusLG, padding: '15px 0' }}\n              >\n                <Row justify='space-around' gutter={[0, 10]} >\n                  <Col span='22'>\n                    <Row>\n                      <Title level={2}>{t('pages.newTopic.title')}</Title>\n                    </Row>\n                    <Row>\n                      <Input onChange={(v) => setTitle(v.target.value)} />\n                    </Row>\n                  </Col>\n                  <Col span='22'>\n                    <Row>\n                      <Title level={2}>{t('pages.newTopic.content')}</Title>\n                    </Row>\n                    <Row>\n                      <TextArea rows={10} onChange={(v) => setContent(v.target.value)} />\n                    </Row>\n                  </Col>\n                  <Col span='22'>\n                    <Row justify=\"end\" align=\"middle\" gutter={[10, 0]}>\n                      <Col>\n                        <ReactCountryFlag\n                          countryCode={language.value.split('-')[1]}\n                          style={{ fontSize: 26 }}\n                        />\n                      </Col>\n                      <Col>\n                        <Select\n                          showSearch\n                          size=\"large\"\n                          style={{ width: 120 }}\n                          onChange={changeLanguage}\n                          defaultValue={language.value}\n                          filterOption={(input, option) =>\n                            (option?.label as string ?? '').toLowerCase().includes(input.toLowerCase())\n                          }\n                          options={languages\n                            .filter((item, index, self) =>\n                              index === self.findIndex((t) => t.label === item.label)\n                            )\n                            .map(lang => {\n                              return { ...lang, label: t(`language.${lang.label}`) }\n                            })}\n                        />\n                      </Col>\n                      <Col>\n                        <Button\n                          disabled={!content || content === '' || !title || title === ''}\n                          type=\"primary\"\n                          htmlType=\"submit\"\n                          size=\"large\"\n                          icon={<NoteAddIcon />}\n                          iconPosition=\"end\"\n                          onClick={createTopic}\n                        >\n                          {t('pages.newTopic.createTopic')}\n                        </Button>\n                      </Col>\n                    </Row>\n                  </Col>\n                </Row>\n              </Layout>\n            </Col>\n          </Row>\n        </Col>\n        <Col xs={0} md='7'>\n          <Row gutter={[0, 10]} style={{ marginTop: 32 }} >\n            <Col span={24}>\n              <ActiveUser />\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Content>\n  )\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8zm2 14h-3v3h-2v-3H8v-2h3v-3h2v3h3zm-3-7V3.5L18.5 9z\"\n}), 'NoteAdd');","/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument) {\n  const argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (\n    argument instanceof Date ||\n    (typeof argument === \"object\" && argStr === \"[object Date]\")\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new argument.constructor(+argument);\n  } else if (\n    typeof argument === \"number\" ||\n    argStr === \"[object Number]\" ||\n    typeof argument === \"string\" ||\n    argStr === \"[object String]\"\n  ) {\n    // TODO: Can we get rid of as?\n    return new Date(argument);\n  } else {\n    // TODO: Can we get rid of as?\n    return new Date(NaN);\n  }\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n"],"names":["getUnixTime","date","Math","trunc","toDate","Title","Typography","NewTopic","language","setLanguage","useContext","AppContext","ndk","saveTopics","forums","saveForums","getBaseRelays","NostrContext","t","useTranslation","naddr","useParams","navigate","useNavigate","token","colorBgContainer","borderRadiusLG","theme","useToken","content","setContent","useState","forumTitle","setForumTitle","title","setTitle","forumEvent","setForumEvent","useEffect","fetchEvent","closeOnEose","then","event","dTag","undefined","_forumEvent$tagValue","tagValue","_jsx","Content","children","_jsxs","Row","justify","Col","xs","md","gutter","span","Breadcrumb","items","onClick","Skeleton","paragraph","rows","width","style","marginTop","kind","encode","Layout","background","borderRadius","padding","level","Input","onChange","v","target","value","TextArea","align","ReactCountryFlag","countryCode","split","fontSize","Select","showSearch","size","langCode","selected","languages","find","lang","defaultValue","filterOption","input","option","_ref","label","toLowerCase","includes","options","filter","item","index","self","findIndex","map","Button","disabled","type","htmlType","icon","NoteAddIcon","iconPosition","async","topicEvent","NDKEvent","generateTags","_filterForEventsTaggi","forumTag","filterForEventsTaggingId","tags","push","Date","toString","publish","getForumRelaySet","relays","onRelays","forEach","r","url","_ref$data$relays","_ref$data","ref","nip19","decode","data","NDKRelaySet","fromRelayUrls","result","newNaddr","ActiveUser","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","argument","argStr","Object","prototype","call","constructor","NaN"],"sourceRoot":""}